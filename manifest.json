{
  "BusinessInfinity": {
    "config": "config/businessInfinity.json",
    "purpose": "Perpetual, fully autonomous boardroom of legendary AI agents with strategic voting and continuous decision-making."
  },
  "PossibilityDrivenAgent": {
    "config": "config/possibilityDrivenAgent.json",
    "purpose": "Determine the overarching Possibility for a system or organization; foundational logic for purpose-driven agents."
  },
  "C-Suite": {
    "config": "config/csuite.json",
    "purpose": "Executive leadership team providing strategic direction, coordination, and business intelligence for BusinessInfinity."
  },
  "Founder": {
    "config": "config/founder.json",
    "purpose": "Create and refine company vision, strategy, and team; drive entrepreneurship and innovation."
  },
  "Investor": {
    "config": "config/investor.json",
    "purpose": "Provide investment analysis, portfolio management, and funding strategies for BusinessInfinity."
  },
  "businessinfinity.asisaga.com": {
    "config": "config/businessinfinity-website.json",
    "purpose": "Deliver a modern web interface for business automation, agent management, and analytics."
  },
  "RealmOfAgents": {
    "config": "config/realmOfAgents.json",
    "purpose": "Foundation for building, composing, and orchestrating intelligent agents with learning, reasoning, and goal-driven behaviors."
  },
  "MCP": {
    "config": "config/mcp.json",
    "purpose": "Suite of integrations and servers for spec-driven development, data integration, and orchestration."
  },
  "workspace": {
    "config": "config/workspace.json",
    "purpose": "Defines all git modules that make up the BusinessInfinity product."
  },
  "pythonPackages": {
    "config": "config/pythonPackages.json",
    "purpose": "Lists all Python packages and their pyproject.toml locations for the monorepo."
  },
  "globalDependencies": {
    "config": "config/globalDependencies.json",
    "purpose": "Unified dependency graph for all major modules."
  },
  "integration": {
    "config": "config/integration.json",
    "purpose": "Strategy and entrypoints for module orchestration and integration."
  },
  "refactorability": {
    "config": "config/refactorability.json",
    "purpose": "Guidelines and monorepo status for code refactoring and structure."
  },
  "fileGlobs": {
    "config": "config/fileGlobs.json",
    "purpose": "File glob patterns for all modules."
  },
  "testSuites": {
    "config": "config/testSuites.json",
    "purpose": "Test suite directory references for all modules."
  },
  "sharedConfig": {
    "config": "config/sharedConfig.json",
    "purpose": "Shared configuration file references for all modules."
  },
  "documentation": {
    "config": "config/documentation.json",
    "purpose": "Documentation file references for all modules."
  },
  "apiContracts": {
    "config": "config/apiContracts.json",
    "purpose": "OpenAPI and API contract documentation for all modules."
  },
  "_aiContext": [
    {
      "source": "schema/",
      "purpose": "Contains JSON Schema files for all configuration types. Used for validation and editor support."
    },
    {
      "source": "docs/",
      "purpose": "Contains markdown documentation for all configuration files and the configuration changelog. Used for onboarding, reference, and AI context."
    },
    {
      "source": "docs/examples/",
      "purpose": "Contains example workflows and sample input files for the system. Used for demonstration and testing."
    },
    {
      "source": "config/secrets.example.json",
      "purpose": "Template for required secrets and environment variables. Used for documentation and onboarding."
    },
    {
      "source": "config/workspace.json",
      "purpose": "Provides additional documentation and module structure for AI assistants and tools. Not merged into the manifest at runtime."
    },
    {
      "source": "config/apiContracts.json",
      "purpose": "Contains OpenAPI and API contract documentation for all modules. Used for AI and tooling context only."
    },
    {
      "source": "config/documentation.json",
      "purpose": "Contains documentation file references for all modules. Used for AI and tooling context only."
    },
    {
      "source": "config/testSuites.json",
      "purpose": "Contains test suite directory references for all modules. Used for AI and tooling context only."
    },
    {
      "source": "config/sharedConfig.json",
      "purpose": "Contains shared configuration file references for all modules. Used for AI and tooling context only."
    },
    {
      "source": "config/pythonPackages.json",
      "purpose": "Contains Python package metadata for all modules. Used for AI and tooling context only."
    },
    {
      "source": "config/globalDependencies.json",
      "purpose": "Contains the unified dependency graph for all modules. Used for AI and tooling context only."
    },
    {
      "source": "config/integration.json",
      "purpose": "Contains integration strategy and entrypoints for all modules. Used for AI and tooling context only."
    },
    {
      "source": "config/refactorability.json",
      "purpose": "Contains refactorability guidelines and monorepo status. Used for AI and tooling context only."
    },
    {
      "source": "config/fileGlobs.json",
      "purpose": "Contains file glob patterns for all modules. Used for AI and tooling context only."
    },
    {
      "source": "config/mcp.json",
      "purpose": "Contains the MCP (Model Context Protocol) module and all MCP submodules. Used for AI and tooling context only."
    }
  ]
}
